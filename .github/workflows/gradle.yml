# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# on: trigger 조건을 의미
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ ]

jobs:
  spring-build:

    # Workflow OS 지정
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # github workflow는 기본적으로 코드 접근이 불가
    # 따라서, github workflow가 돌아가는 공간에 결과물을 클론하여 가져갈 수 있도록 하위의 단계 지정
    - name: Checkout
    # 코드를 클론해가는 github action에는 여러 버전이 존재하는데, 그 중 4번째 버전을 선택 (기본값이었음)
      uses: actions/checkout@v4

    # JDK 버전 설정 (temurin 이라는 것을 활용)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradle 설정 최적화
    # 의존성 캐시 등을 포함한 최적화 기능 제공
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    # Spring Build
    - name: Build with Gradle Wrapper
      run: |
        ./gradlew build
        echo "🎉Success: Spring Build 🎉"

    # NOTE:
      ## Gradle Wrapper를 사용하여 빌드하는 것이 권장되지만,
      ## Gradle Wrapper가 없다면, 아래의 명령어를 통해 빌드!
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build



  docker-build:

      runs-on: ubuntu-latest
      # 의존성 명시 (workflow 순서 명시)
      needs: spring-build
      permissions:
          contents: read

      steps:
        - name: Build the Docker image
          run: |
            echo "🎉Success: 여기에 도달 🎉"


  # 의존성 그래프 제출
  # Why ?
  ## Github에 의존성 그래프를 제출하게 되면, 패키지 간 의존성 관련 문제를 진단하여 필요할 때 Github에서 알려줌
  ## Ex 1: 사용 중인 패키지의 버전 충돌
  ## Ex 2: 사용 중인 패키지의 Major 업데이트로 인한 코드 변경 -> 호환성 문제 발생 가능
  ## Ex 3: 특정 의존성을 다운로드하는 데 너무 많은 시간이 걸리는 경우
  ## Ex 4: 의존성 관련 라이선스 문제 (최근 Redis 라이선스가 변경되어 클라우드 환경에서는 사용하지 못하게 된 것처럼)
  dependency-submission:

    runs-on: ubuntu-latest
    # 의존성 그래프 제출을 위해선, git workflow에서 쓰기 작업 허용이 필요함
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
